{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","alphabetSort","setState","ALPHABET","lengthSort","LENGTH","reversed","reset","this","goods","visibleGoods","sort","good1","good2","localeCompare","length","Error","reverse","console","log","getReorderedGoods","isVisible","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,aAAe,WACb,EAAKC,UAAS,iBAAO,CACnBH,SAAUL,EAASS,cARzB,EAYEC,WAAa,WACX,EAAKF,UAAS,iBAAO,CACnBH,SAAUL,EAASW,YAdzB,EAkBEC,SAAW,WACT,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBApBzB,EAwBES,MAAQ,WACN,EAAKL,UAAS,iBAAO,CACnBJ,YAAY,EACZC,SAAU,OA3BhB,4CA+BE,WAAU,IAAD,OACP,EAAiCS,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAxEV,SACEA,EADF,GAGG,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAe,YAAID,GAAOE,MAAK,SAACC,EAAOC,GAC3C,OAAQd,GACN,KAAKL,EAASS,SACZ,OAAOS,EAAME,cAAcD,GAC7B,KAAKnB,EAASW,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAC9B,KAAKrB,EAASM,KACZ,OAAO,EAET,QACE,MAAM,IAAIgB,MAAJ,oDAAuDjB,EAAvD,kBAIZ,OAAID,EACKY,EAAaO,WAKtBC,QAAQC,IAAIpB,EAAUD,GAEfY,GA8CSU,CAAkBzB,EAAiB,CAC/CG,aACAC,aAEIsB,EAAYtB,IAAaL,EAASM,OAAuB,IAAfF,EAEhD,OACE,sBAAKwB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAY9B,EAASS,WAAaJ,IAEpC0B,QAAS,WACP,EAAKxB,gBANT,iCAYA,wBACEsB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAY9B,EAASW,SAAWN,IAElC0B,QAAS,WACP,EAAKrB,cANT,4BAYA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAa1B,IAEf2B,QAAS,WACP,EAAKnB,YANT,sBAYEe,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKlB,SAJT,sBAYJ,6BACE,6BACGE,EAAMiB,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA9FtC,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a08d6dfd.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods].sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error(`Oppp... <;p there is no fucking match for ${sortType} type...!`);\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  alphabetSort = () => {\n    this.setState(() => ({\n      sortType: SortType.ALPHABET,\n    }));\n  };\n\n  lengthSort = () => {\n    this.setState(() => ({\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  reversed = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      isReversed: false,\n      sortType: 0,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, {\n      isReversed,\n      sortType,\n    });\n    const isVisible = sortType === SortType.NONE && isReversed === false;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': SortType.ALPHABET !== sortType,\n            })}\n            onClick={() => {\n              this.alphabetSort();\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': SortType.LENGTH !== sortType,\n            })}\n            onClick={() => {\n              this.lengthSort();\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={() => {\n              this.reversed();\n            }}\n          >\n            Reverse\n          </button>\n\n          {!isVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.reset();\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map((good) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}